# DB
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/mariadb
spring.datasource.username=mariadb
spring.datasource.password=rldjq123!
spring.datasource.hikari.idle-timeout=600000

# spring.resources.static-locations=file:/c:/webroot_airbnb/build/

# mybatis ??
mybatis.config-locations=classpath:/mybatis-config.xml
mybatis.mapper-locations=classpath:/mappers/**/*Mapper.xml

# ?? ?? ??
spring.devtools.livereload.enabled=true
spring.thymeleaf.cache=false

#?? ??
spring.servlet.multipart.max-file-size=1024MB
spring.servlet.multipart.max-request-size=1024MB

#?? ??
tomcat.ajp.protocol=AJP/1.3
tomcat.ajp.port=8009
tomcat.ajp.enabled=true

# UTF-8 ??
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true

#
spring.profiles.include=secret

#jwt secret ??
jwt.secret=boardrestboardrestboardrestboardrestboardrest


# Rest-api 설정
server.servlet.context-path=/api

# # MariaDB
# spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# spring.datasource.url=jdbc:mariadb://mariadb.cls8a6uamjkk.ap-northeast-2.rds.amazonaws.com:3306/mariadb
# spring.datasource.username=${DB_USERNAME}
# spring.datasource.password=${DB_PASSWORD}

# # Google
# spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
# spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
# spring.security.oauth2.client.registration.google.scope=profile,email

# # KaKao
# spring.security.oauth2.client.registration.kakao.client-id=${KAKAO_CLIENT_ID}
# spring.security.oauth2.client.registration.kakao.client-secret=${KAKAO_CLIENT_SECRET}

# spring.security.oauth2.client.registration.kakao.scope = profile_nickname, account_email
# spring.security.oauth2.client.registration.kakao.client-name = Kakao
# spring.security.oauth2.client.registration.kakao.authorization-grant-type = authorization_code
# spring.security.oauth2.client.registration.kakao.redirect-uri = http://localhost:8080/login/oauth2/code/kakao
# spring.security.oauth2.client.registration.kakao.client-authentication-method = client_secret_post

# spring.security.oauth2.client.provider.kakao.authorization-uri = https://kauth.kakao.com/oauth/authorize
# spring.security.oauth2.client.provider.kakao.token-uri = https://kauth.kakao.com/oauth/token
# spring.security.oauth2.client.provider.kakao.user-info-uri = https://kapi.kakao.com/v2/user/me
# spring.security.oauth2.client.provider.kakao.user-name-attribute = id

# # Naver
# spring.security.oauth2.client.registration.naver.client-id=${NAVER_CLIENT_ID}
# spring.security.oauth2.client.registration.naver.client-secret=${NAVER_CLIENT_SECRET}

# spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
# spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
#   spring.security.oauth2.client.registration.naver.scope=name,email,nickname
#   spring.security.oauth2.client.registration.naver.client-name=Naver # provider
#   spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
#   spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
#   spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
#   # Security? ??? ?? username? ??? ?????? response? (?? ??? ???? JSON ?? ??)
# spring.security.oauth2.client.provider.naver.user-name-attribute=response

# # Github
# spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
# spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
